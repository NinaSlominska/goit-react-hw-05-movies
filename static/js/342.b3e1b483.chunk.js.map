{"version":3,"file":"static/js/342.b3e1b483.chunk.js","mappings":"uRAEMA,EAAU,mCAGT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,qGACkBC,EAAAA,EAAAA,GAAM,wBAAyB,CACpDC,OAAQ,CACNC,QAASJ,KAHR,cACCK,EADD,yBAOEA,EAASC,MAPX,kEAqBA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,wFACkBN,EAAAA,EAAAA,GAAM,YAAD,OAAaM,GAAW,CAClDL,OAAQ,CACNC,QAASJ,KAHR,cACCK,EADD,yBAMEA,EAASC,MANX,kEASA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA8BD,GAA9B,wFACkBN,EAAAA,EAAAA,GAAM,YAAD,OAAaM,EAAb,YAAgC,CAC1DL,OAAQ,CACNC,QAASJ,KAHR,cACCK,EADD,yBAMEA,EAASC,MANX,kEASA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAiCF,GAAjC,wFACkBN,EAAAA,EAAAA,GAAM,YAAD,OAAaM,EAAb,YAAgC,CAC1DL,OAAQ,CACNC,QAASJ,KAHR,cACCK,EADD,yBAMEA,EAASC,MANX,kEAzCPJ,EAAAA,EAAAA,SAAAA,QAAyB,6B,uJCAV,SAASS,EAAT,GAAqC,IAAD,IAAfC,EAAe,EAAfA,YAC1BC,EACND,EADMC,MAAOC,EACbF,EADaE,aAAcC,EAC3BH,EAD2BG,aAAcC,EACzCJ,EADyCI,SAAUC,EACnDL,EADmDK,OAAQC,EAC3DN,EAD2DM,YAEvDC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAChD,OACE,iCACE,SAAC,KAAD,CAASC,GAAIJ,EAASK,QAAQH,MAAO,CAACC,KAAKL,GAA3C,sBACA,4BACE,gBACEQ,IAAG,yCAAoCT,GACvCU,IAAKf,KAEP,4BACE,0BACGA,EADH,KACU,4CAAWC,QAAX,IAAWA,OAAX,EAAWA,EAAce,MAAM,EAAG,GAAlC,UAFZ,gBAIc,4BAAOC,KAAKC,MAAqB,GAAfhB,GAAlB,QACZ,uCACA,uBAAIC,KACJ,oCACA,uBAAIC,GAAUA,EAAOe,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,gBAGvD,4BACE,oDACA,SAAC,KAAD,CAASV,GAAG,OAAZ,mBACA,SAAC,KAAD,CAASA,GAAG,UAAZ,yBAEF,SAAC,EAAAW,SAAD,WACE,SAAC,KAAD,QAIP,CCjCc,SAASC,IACtB,OAAqCC,EAAAA,EAAAA,UAAS,IAA9C,eAAO1B,EAAP,KAAoB2B,EAApB,KACQ/B,GAAYgC,EAAAA,EAAAA,MAAZhC,QAWR,OAVAiC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAK,mCAAG,8GAESnC,EAAAA,EAAAA,IAAaC,GAFtB,OAEJmC,EAFI,OAGVJ,EAAcI,GAHJ,uGAAH,qDAMXD,GACD,GAAE,CAAClC,KAGF,0BACE,SAACG,EAAD,CAAWC,YAAaA,KAG7B,C","sources":["API/index.js","components/MovieInfo/MovieInfo.js","pages/MovieDetails.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'b4b59a799c6c994a741788cb06805fdc';\naxios.defaults.baseURL = 'https://api.themoviedb.org/';\n\nexport async function fetchTrending() {\n  const response = await axios('/3/trending/movie/day', {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  return response.data;\n}\n\nexport async function fetchMoviesByName(name) {\n  const response = await axios('/3/search/movie', {\n    params: {\n      api_key: API_KEY,\n      query: name,\n      page: 1,\n    },\n  });\n  return response.data;\n}\n\nexport async function fetchMovieId(movieId) {\n  const response = await axios(`/3/movie/${movieId}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n}\n\nexport async function fetchMovieCast(movieId) {\n  const response = await axios(`/3/movie/${movieId}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n}\n\nexport async function fetchMovieReviews(movieId) {\n  const response = await axios(`/3/movie/${movieId}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n}\n","import { Suspense, useRef } from 'react';\nimport { NavLink, Outlet, useLocation } from 'react-router-dom';\n\nexport default function MovieInfo({ currentFilm }) {\n  const { title, release_date, vote_average, overview, genres, poster_path } =\n    currentFilm;\n  const location = useLocation();\n  const backLink = useRef(location.state?.from ?? '/');\n  return (\n    <>\n      <NavLink to={backLink.current}state={{from:location}}>Go back</NavLink>\n      <div>\n        <img\n          src={`https://image.tmdb.org/t/p/w200${poster_path}`}\n          alt={title}\n        />\n        <div>\n          <h2>\n            {title} <span>{`(${release_date?.slice(0, 4)})`}</span>\n          </h2>\n          User Score: <span>{Math.round(vote_average * 10)}%</span>\n          <h3> Overview</h3>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          <p>{genres && genres.map(genre => genre.name).join(' | ')}</p>\n        </div>\n      </div>\n      <div>\n        <h3>Additional information</h3>\n        <NavLink to=\"cast\">Cast</NavLink>\n        <NavLink to=\"reviews\">Reviews</NavLink>\n      </div>\n      <Suspense>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieId } from 'API';\nimport MovieInfo from 'components/MovieInfo/MovieInfo';\nexport default function MovieDetails() {\n  const [currentFilm, setCurentFilm] = useState('');\n  const { movieId } = useParams();\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        const film = await fetchMovieId(movieId);\n        setCurentFilm(film);\n      } catch (error) {}\n    };\n    fetch();\n  }, [movieId]);\n\n  return (\n    <div>\n      <MovieInfo currentFilm={currentFilm} />\n    </div>\n  );\n}\n"],"names":["API_KEY","fetchTrending","axios","params","api_key","response","data","fetchMovieId","movieId","fetchMovieCast","fetchMovieReviews","MovieInfo","currentFilm","title","release_date","vote_average","overview","genres","poster_path","location","useLocation","backLink","useRef","state","from","to","current","src","alt","slice","Math","round","map","genre","name","join","Suspense","MovieDetails","useState","setCurentFilm","useParams","useEffect","fetch","film"],"sourceRoot":""}