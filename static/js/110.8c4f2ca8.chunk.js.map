{"version":3,"file":"static/js/110.8c4f2ca8.chunk.js","mappings":"+SAEMA,EAAU,mCAGT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,qGACkBC,EAAAA,EAAAA,GAAM,wBAAyB,CACpDC,OAAQ,CACNC,QAASJ,KAHR,cACCK,EADD,yBAOEA,EAASC,MAPX,kEAUA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,wFACkBN,EAAAA,EAAAA,GAAM,kBAAmB,CAC9CC,OAAQ,CACNC,QAASJ,EACTS,MAAOD,EACPE,KAAM,KALL,cACCL,EADD,yBAQEA,EAASC,MARX,kEAWA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,wFACkBV,EAAAA,EAAAA,GAAM,YAAD,OAAaU,GAAW,CAClDT,OAAQ,CACNC,QAASJ,KAHR,cACCK,EADD,yBAMEA,EAASC,MANX,kEASA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAA8BD,GAA9B,wFACkBV,EAAAA,EAAAA,GAAM,YAAD,OAAaU,EAAb,YAAgC,CAC1DT,OAAQ,CACNC,QAASJ,KAHR,cACCK,EADD,yBAMEA,EAASC,MANX,kEASA,SAAeQ,EAAtB,+CAAO,OAAP,oBAAO,WAAiCF,GAAjC,wFACkBV,EAAAA,EAAAA,GAAM,YAAD,OAAaU,EAAb,YAAgC,CAC1DT,OAAQ,CACNC,QAASJ,KAHR,cACCK,EADD,yBAMEA,EAASC,MANX,kEAzCPJ,EAAAA,EAAAA,SAAAA,QAAyB,6B,wJCEV,SAASa,IACtB,IAAQH,GAAYI,EAAAA,EAAAA,MAAZJ,QACR,GAAqCK,EAAAA,EAAAA,UAAS,IAA9C,eAAOC,EAAP,KAAoBC,EAApB,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACR,GAAKR,EAAL,CAGA,IAAMS,EAAK,mCAAG,8GAESR,EAAAA,EAAAA,IAAeD,GAFxB,OAEJU,EAFI,OAGVH,EAAcG,EAAKC,MAHT,uGAAH,qDAMXF,GAPC,CAQF,GAAE,CAACT,IACuB,IAAvBM,EAAYM,QACP,wEAGP,0BACE,SAAC,KAAD,iBACGN,QADH,IACGA,OADH,EACGA,EAAaO,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,aAAclB,EAA0B,EAA1BA,KAAMmB,EAAoB,EAApBA,UAAWC,EAAS,EAATA,GAClD,OACE,UAAC,EAAAC,GAAD,YACE,gBACEC,IAAG,yCAAoCJ,GACvCK,IAAKvB,KAEP,uBAAIA,KACJ,uBAAImB,MANGC,EASZ,OAIR,C,2NCvCYI,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,mUAiBVE,EAAYF,EAAAA,GAAAA,IAAH,wDAITG,EAAgBH,EAAAA,GAAAA,IAAH,wDAKbJ,EAAKI,EAAAA,GAAAA,GAAH,yCASFI,GALOJ,EAAAA,GAAAA,KAAH,sFAKKA,EAAAA,GAAAA,GAAH,kGAMNK,GAAaL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAH,gO","sources":["API/index.js","components/MovieInfo/Cast.js","components/MovieInfo/MovieInfo.styled.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'b4b59a799c6c994a741788cb06805fdc';\naxios.defaults.baseURL = 'https://api.themoviedb.org/';\n\nexport async function fetchTrending() {\n  const response = await axios('/3/trending/movie/day', {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  return response.data;\n}\n\nexport async function fetchMoviesByName(name) {\n  const response = await axios('/3/search/movie', {\n    params: {\n      api_key: API_KEY,\n      query: name,\n      page: 1,\n    },\n  });\n  return response.data;\n}\n\nexport async function fetchMovieId(movieId) {\n  const response = await axios(`/3/movie/${movieId}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n}\n\nexport async function fetchMovieCast(movieId) {\n  const response = await axios(`/3/movie/${movieId}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n}\n\nexport async function fetchMovieReviews(movieId) {\n  const response = await axios(`/3/movie/${movieId}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n}\n","import { fetchMovieCast } from 'API';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Galery, Li } from './MovieInfo.styled';\n\nexport default function Cast() {\n  const { movieId } = useParams();\n  const [currentFilm, setCurentFilm] = useState([]);\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n    const fetch = async () => {\n      try {\n        const film = await fetchMovieCast(movieId);\n        setCurentFilm(film.cast);\n      } catch (error) {}\n    };\n    fetch();\n  }, [movieId]);\n  if (currentFilm.length === 0) {\n    return <p>Sorry we don't have any cast for this movie</p>;\n  }\n  return (\n    <div>\n      <Galery>\n        {currentFilm?.map(({ profile_path, name, character, id }) => {\n          return (\n            <Li key={id}>\n              <img\n                src={`https://image.tmdb.org/t/p/w200${profile_path}`}\n                alt={name}\n              ></img>\n              <p>{name}</p>\n              <p>{character}</p>\n            </Li>\n          );\n        })}\n      </Galery>\n    </div>\n  );\n}\n","import { Link, NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 8px;\n  margin-bottom: 16px;\n  color: gray;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n  border-radius: 5px;\n  box-shadow: 1px 1px 1px 0.5px grey;\n  :hover {\n    color: tomato;\n  }\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  gap: 20px;\n`;\nexport const ContainerLink = styled.div`\n  display: flex;\n  gap: 20px;\n`;\n\nexport const Li = styled.li`\n  width: 200px;\n`;\n\nexport const Year = styled.span`\n  color: teal;\n  //   font-size: 18px;\n  font-weight: 600;\n`;\nexport const Galery = styled.ul`\n  display: flex;\n  gap: 20px;\n  flex-wrap: wrap;\n  list-style: none;\n`;\nexport const LinkStyled = styled(NavLink)`\n  text-decoration: none;\n  color: black;\n  font-size: 18px;\n  text-decoration: underline;\n  &.active {\n    color: white;\n    background-color: tomato;\n  }\n  &:hover {\n    color: tomato;\n  }\n`;\n"],"names":["API_KEY","fetchTrending","axios","params","api_key","response","data","fetchMoviesByName","name","query","page","fetchMovieId","movieId","fetchMovieCast","fetchMovieReviews","Cast","useParams","useState","currentFilm","setCurentFilm","useEffect","fetch","film","cast","length","map","profile_path","character","id","Li","src","alt","StyledLink","styled","Link","Container","ContainerLink","Galery","LinkStyled","NavLink"],"sourceRoot":""}