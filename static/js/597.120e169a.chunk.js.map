{"version":3,"file":"static/js/597.120e169a.chunk.js","mappings":"+SAEMA,EAAU,mCAGT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,qGACkBC,EAAAA,EAAAA,GAAM,wBAAyB,CACpDC,OAAQ,CACNC,QAASJ,KAHR,cACCK,EADD,yBAOEA,EAASC,MAPX,kEAUA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,wFACkBN,EAAAA,EAAAA,GAAM,kBAAmB,CAC9CC,OAAQ,CACNC,QAASJ,EACTS,MAAOD,EACPE,KAAM,KALL,cACCL,EADD,yBAQEA,EAASC,MARX,kEAWA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,wFACkBV,EAAAA,EAAAA,GAAM,YAAD,OAAaU,GAAW,CAClDT,OAAQ,CACNC,QAASJ,KAHR,cACCK,EADD,yBAMEA,EAASC,MANX,kEASA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAA8BD,GAA9B,wFACkBV,EAAAA,EAAAA,GAAM,YAAD,OAAaU,EAAb,YAAgC,CAC1DT,OAAQ,CACNC,QAASJ,KAHR,cACCK,EADD,yBAMEA,EAASC,MANX,kEASA,SAAeQ,EAAtB,+CAAO,OAAP,oBAAO,WAAiCF,GAAjC,wFACkBV,EAAAA,EAAAA,GAAM,YAAD,OAAaU,EAAb,YAAgC,CAC1DT,OAAQ,CACNC,QAASJ,KAHR,cACCK,EADD,yBAMEA,EAASC,MANX,kEAzCPJ,EAAAA,EAAAA,SAAAA,QAAyB,6B,+ICCV,SAASa,IACtB,IAAQH,GAAYI,EAAAA,EAAAA,MAAZJ,QACR,GAAqCK,EAAAA,EAAAA,UAAS,IAA9C,eAAOC,EAAP,KAAoBC,EAApB,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACR,GAAKR,EAAL,CAGA,IAAMS,EAAK,mCAAG,8GAESP,EAAAA,EAAAA,IAAkBF,GAF3B,OAEJU,EAFI,OAGVH,EAAcG,EAAKC,SAHT,uGAAH,qDAMXF,GAPC,CAQF,GAAE,CAACT,IACuB,IAAvBM,EAAYM,QACP,2EAGP,0BACE,+BACGN,QADH,IACGA,OADH,EACGA,EAAaO,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,QAASC,EAAS,EAATA,GACpC,OACE,2BACE,oCAAYF,MACZ,uBAAIC,MAFGC,EAKZ,OAIR,C","sources":["API/index.js","components/MovieInfo/Reviews.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'b4b59a799c6c994a741788cb06805fdc';\naxios.defaults.baseURL = 'https://api.themoviedb.org/';\n\nexport async function fetchTrending() {\n  const response = await axios('/3/trending/movie/day', {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n\n  return response.data;\n}\n\nexport async function fetchMoviesByName(name) {\n  const response = await axios('/3/search/movie', {\n    params: {\n      api_key: API_KEY,\n      query: name,\n      page: 1,\n    },\n  });\n  return response.data;\n}\n\nexport async function fetchMovieId(movieId) {\n  const response = await axios(`/3/movie/${movieId}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n}\n\nexport async function fetchMovieCast(movieId) {\n  const response = await axios(`/3/movie/${movieId}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n}\n\nexport async function fetchMovieReviews(movieId) {\n  const response = await axios(`/3/movie/${movieId}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n}\n","import { fetchMovieReviews } from 'API';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nexport default function Reviews() {\n  const { movieId } = useParams();\n  const [currentFilm, setCurentFilm] = useState([]);\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n    const fetch = async () => {\n      try {\n        const film = await fetchMovieReviews(movieId);\n        setCurentFilm(film.results);\n      } catch (error) {}\n    };\n    fetch();\n  }, [movieId]);\n  if (currentFilm.length === 0) {\n    return <p>Sorry we don't have any reviews for this movie</p>;\n  }\n  return (\n    <div>\n      <ul>\n        {currentFilm?.map(({ author, content, id }) => {\n          return (\n            <li key={id}>\n              <p>Author: {author}</p>\n              <p>{content}</p>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n"],"names":["API_KEY","fetchTrending","axios","params","api_key","response","data","fetchMoviesByName","name","query","page","fetchMovieId","movieId","fetchMovieCast","fetchMovieReviews","Reviews","useParams","useState","currentFilm","setCurentFilm","useEffect","fetch","film","results","length","map","author","content","id"],"sourceRoot":""}